apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: azureinfrastructure
  title: Azure infrastructure
  description: Template for the Azure infrastructure creation
spec:
  owner: backstage
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
        - environment
        - virtual_network_name
        - network_interface_name
        - vm_name
        - admin_username
        - admin_password
        - storage_account_name
        - tagkey
        - tagvalue
        - public_ip_name
  
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5

        environment:
          title: environment
          type: string
          description: environment variable
          enum:
            - development
            - staging
            - production

        virtual_network_name:
          title: virtual_network_name
          type: string
          description: virtual_network_name
        network_interface_name:
          title: network_interface_name
          type: string
          description: network_interface_name
        vm_name:
          title: vm_name
          type: string
          description: vm_name
        admin_username:
          title: admin_username
          type: string
          description: admin_username
        admin_password:
          title: admin_password
          type: string
          description: admin_password
        storage_account_name:
          title: storage_account_name
          type: string
          description: storage_account_name
        tagkey:
          title: tagkey
          type: string
          description: tagkey
        tagvalue:
          title: tagvalue
          type: string
          description: tagvalue
        public_ip_name:
          title: public_ip_name
          type: string
          description: public_ip_name         


    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          environment: ${{ parameters.environment }}
          virtual_network_name: ${{ parameters.virtual_network_name }}
          network_interface_name: ${{ parameters.network_interface_name }}
          vm_name: ${{ parameters.vm_name }}
          admin_username: ${{ parameters.admin_username }}
          admin_password: ${{ parameters.admin_password }}
          storage_account_name: ${{ parameters.storage_account_name }}
          tagkey: ${{ parameters.tagkey }}
          tagvalue: ${{ parameters.tagvalue }}
          public_ip_name: ${{ parameters.public_ip_name }}


    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}


    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'


  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}